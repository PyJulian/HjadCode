#!/bin/bash

ver="1"

case "$1" in
	""|--help)
		echo -e "\033[38;5;117m _____   _       _ _____       _ ___   \n\033[38;5;111m|  |  | |_|___ _| |     |___ _| |_  |  \n\033[38;5;105m|     | | | .'| . |   --| . | . |_| |_ \n\033[38;5;32m|__|__|_| |__,|___|_____|___|___|_____|\033[0m By Julia\n\033[38;5;111m      |___|\033[0m\n\nLICENSE: https://github.com/PyJulian/HjadCode/blob/main/LICENSE\nREADME: https://github.com/PyJulian/HjadCode/blob/main/README.md\n\nUsage: hjad <file> (required option)\nHjad Commands:\n\n\t--help | This help\n\t--compile <.hjad file> | Converts a .hjad to a .applescript file\n\t--applet <.applescript file> (CFBundleExecutable) (CFBundleIdentifier) (CFBundleName) (CFBundleVersion) | Build a applet from a .applescript file"
	;;
	--compile) # Compile the code
		
		# Check if Path exists because else it won't fucking work
		# Sets the cd aswell
		if ! cd $(dirname "$2"); then
        	echo -e "\033[38;5;124mHjad (Error): Path is NOT valid\033[0m"
        	exit 1
    	fi

		file=$(basename "$2") # Handsome Filename Value, Yipee
		export="set the mem to {}"$'\ntry' # The Osascript code

		# Check if File exists
		if ! [[ $file == *.hjad ]] && ! [[ $file == *.juan ]] && ! [[ $file == *.nigger ]]; then
			echo -e "\033[38;5;124mHjad (Error): File is NOT a .hjad file\033[0m"
			exit 1
		fi

		# Loop through file
		while IFS= read -r line || [[ -n $line ]]; do
			read -r -a split <<< "$line" # Split Line

			if [[ ${split[0]:0:1} == '$' ]] || [[ ${split[0]:0:1} == '#' ]] || [[ ${split[0]} == 'use' ]] || [[ ${split[0]} == 'debug' ]] || [[ ${split[0]} == '' ]] || [[ ${split[0]} == 'remember' ]] || [[ ${split[0]} == 'forget' ]]; then
				if [[ ${split[0]} == 'debug' ]] || [[ ${split[0]} == 'remember' ]] || [[ ${split[0]} == 'forget' ]]; then
					echo -e "\033[38;5;214mHjad (Warning): DEBUG functions are only valid in non-compiled script and will be IGNORED when being compiled"$'\nDEBUG functions:\n\t- debug\n\t- remember\n\t- forget\033[0m'
				elif [[ ${split[0]} == 'use' ]] && ! [[ ${split[1]} == ${ver} ]]; then
					echo -e "\033[38;5;214mHjad (Warning): You're compiling an script that is using hjadcod${split[1]} instead of hjadcod${ver}, some functions might not work\033[0m"
					export="display dialog \"This script has been compiled using hjacod${ver} instead of hjadcod${split[1]}."$'\nThe script might not work as expected." buttons {"Continue Execution"} with title "HjadCode Warning" with icon 2 default button 1 \n'"${export}"
				fi
			elif [[ ${split[0]} == 'mem' ]]; then
				if [[ ${split[1]} == 'save' ]]; then
					export="${export}"$'\n'"set the mem to mem & \"$( IFS=' '; echo "${split[@]:2}" )\""
				elif [[ ${split[1]} == 'load' ]]; then
					export="${export}"$'\n'"display alert (item ${split[2]} of mem)"
				elif [[ ${split[1]} == 'clear' ]]; then
					export="${export}"$'\n'"set the mem to {}"
				fi
			elif [[ ${split[0]} == 'msg' ]]; then
				# Display alert lol
				export="${export}"$'\n'"display alert \"$( IFS=' '; echo "${split[@]:1}" )\""
			elif [[ ${split[0]} == 'conf' ]]; then
				# Confirm Function
				export="${export}"$'\n'"display alert \"$( IFS=' '; echo "${split[@]:3}" )\" buttons {\"${split[1]}\", \"${split[2]}\"}"$'\n'"if the button returned of the result is \"${split[1]}\" then"$'\n'"set the mem to mem & \"${split[1]}\""$'\nelse\n'"set the mem to mem & \"${split[2]}\""$'\nend if'
			elif [[ ${split[0]} == 'if' ]] || [[ ${split[1]} == 'mem' ]] || [[ ${split[3]} == 'check' ]]; then
				# Check a memory slot of choice
				export="${export}"$'\n'"if (item ${split[2]} of mem) is \"${split[4]}\" then"$'\n'"set the mem to mem & \"$( IFS=' '; echo "${split[@]:5}" )\""$'\nelse\n'"set the mem to mem & \"False\""$'\nend if'
			elif [[ ${split[0]} == 'AHS' ]]; then
				# Run Script
				if [[ ${split[1]} == 'shell' ]] || [[ ${split[1]} == 'sh' ]]; then
					export="${export}"$'\ntry\n'"do shell script \"$( IFS=' '; echo "${split[@]:2}" )\""$'\non error err\nerror err\nend try'
				elif [[ ${split[1]} == 'apple' ]]; then
					export="${export}"$'\ntry\n'"run script \"$( IFS=' '; echo "${split[@]:2}" )\""$'\non error err\nerror err\nend try'
				fi
			elif [[ "$line" == *"+"* || "$line" == *"-"* || "$line" == "*"* || "$line" == *"/"* ]]; then
				# Maths
				export="${export}"$'\n'"if ((run script $line) as number) < 0 then"$'\n'"set the mem to mem & \"-\" & (run script $line)"$'\nelse\n'"set the mem to mem & (run script $line)"$'\nend if'
			else
				# Add the code straight to the Linker if it isn't valid
				echo -e "\033[38;5;214mHjad (Warning): \"${line}\" is NOT an valid hjad function\033[0m"
				export="${export}"$'\n'"${line}"
			fi
			
		done < ${file}

		export="${export}"$'\non error err\ndisplay alert err message "HJADCODE EXECUTION ERROR\"'$'\nend try'
		echo "${export}" > ${file%.*}.applescript
		echo -e "\033[38;5;34mHjad (Succes): Osascript file created at \"$(dirname "$2")/${file%.*}.applescript\"\033[0m"
	;;
	--applet)
		exec="${3:-applet}"
		id="${4:-com.hjad.applet}"
		bundle="${5:-applet}"
		ver="${6:-1}"

		# I'll just put the applescript file contents in another bash file that uses the "osascript << EOD EOD" tag
		if ! cd $(dirname "$2"); then
        	echo -e "\033[38;5;124mHjad (Error): Path is NOT valid\033[0m"
        	exit 1
    	fi

		file=$(basename "$2") # Handsome Filename Value, Yipee

		# Check if File exists
		if ! [[ $file == *.applescript ]]; then
			echo -e "\033[38;5;124mHjad (Error): File is NOT a .applescript file\033[0m"
			exit 1
		fi

		mkdir -p "${bundle}.app/Contents/MacOS"
		cd "${bundle}.app/Contents/"
		cat > Info.plist <<EOF
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
  	<dict>
		<key>CFBundleExecutable</key>
    	<string>${bundle}</string>
    	<key>CFBundleIdentifier</key>
		<string>${id}</string>
    	<key>CFBundleName</key>
		<string>${exec}</string>
   		<key>CFBundleVersion</key>
		<string>${ver}</string>
	</dict>
</plist>
EOF
		cd MacOS
		cat > ${bundle} <<EOF
#!/bin/bash
osascript <<EOD
$( cat $(dirname "$2")/${file} )
EOD
EOF
		chmod +x ${bundle}
		echo -e "\033[38;5;34mHjad (Succes): Applet created at \"$(dirname "$2")/${bundle}.app\"\033[0m"
	;;
	*)
		echo -e "\033[38;5;214mHjad (Error): Command NOT Found\033[0m"
	;;
esac
